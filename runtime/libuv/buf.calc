package libuv

import (
    "github.com/Chronostasys/calc/runtime/coro"
)

type Buffer struct {
    max int
    buf *byte
    len int
    explen int
    task *coro.AsyncGen<*UVBuf>
}

func Write(this buf *Buffer, data *byte, len int) void {
    if len+buf.len>buf.max {
        newbuf := GC_malloc(len+buf.len)
        memcpy(newbuf,buf.buf,buf.len)
        ptr := inttoptr<*byte>( ptrtoint<*byte>(newbuf)+buf.len)
        memcpy(ptr,data,len)
        buf.max = len+buf.len
        buf.len = len+buf.len
        buf.buf = newbuf
        return
    }
    ptr := inttoptr<*byte>(ptrtoint<*byte>(buf.buf)+buf.len)
    memcpy(ptr,data,len)
    buf.len = len+buf.len
    return
}

func PreWrite(this buf *Buffer, len int) *byte {
    if len+buf.len>buf.max {
        newbuf := GC_malloc(len+buf.len)
        if buf.len>0 {
            memcpy(newbuf,buf.buf,buf.len)
        }
        buf.max = len+buf.len
        buf.buf = newbuf
        return inttoptr<*byte>(ptrtoint<*byte>(buf.buf)+buf.len)
    }
    return inttoptr<*byte>(ptrtoint<*byte>(buf.buf)+buf.len)
}
